stages:
  - build
  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive

build:master:windows32:
  stage: build
  tags:
    - autobuild
    - windows
  before_script:
    - pipenv install
  script:
    - pipenv run autobuild configure -c ReleaseOS -A32 -- -DUSE_FMODSTUDIO=ON -DUSE_NVAPI=ON -DUSE_LTO=ON -DVS_DISABLE_FATAL_WARNINGS=ON -DVIEWER_CHANNEL_TYPE="Test"
    - pipenv run autobuild build -c ReleaseOS -A32 --no-configure
  artifacts:
    name: "$env:CI_COMMIT_REF_NAME-$env:CI_COMMIT_SHORT_SHA"
    expire_in: 4 week
    paths:
      - build-vc-32/newview/Release/build_data.json
      - build-vc-32/newview/Release/alchemy-bin.pdb
      - build-vc-32/newview/Release/Alchemy_*_Setup.exe
  only:
    - schedules

build:master:windows64:
  stage: build
  tags:
    - autobuild
    - windows
  before_script:
    - pipenv install
  script:
    - pipenv run autobuild configure -c ReleaseOS -A64 -- -DUSE_FMODSTUDIO=ON -DUSE_NVAPI=ON -DUSE_LTO=ON -DVS_DISABLE_FATAL_WARNINGS=ON -DVIEWER_CHANNEL_TYPE="Test"
    - pipenv run autobuild build -c ReleaseOS -A64 --no-configure
  artifacts:
    name: "$env:CI_COMMIT_REF_NAME-$env:CI_COMMIT_SHORT_SHA"
    expire_in: 4 week
    paths:
      - build-vc-64/newview/Release/build_data.json
      - build-vc-64/newview/Release/alchemy-bin.pdb
      - build-vc-64/newview/Release/Alchemy_*_Setup.exe
  only:
    - schedules

build:project:windows32:
  stage: build
  tags:
    - autobuild
    - windows
  before_script:
    - pipenv install
  script:
    - $env:VIEWER_CHANNEL_CODENAME = $env:CI_COMMIT_REF_NAME[8..100] -join ''
    - pipenv run autobuild configure -c ReleaseOS -A32 -- -DUSE_FMODSTUDIO=ON -DUSE_NVAPI=ON -DUSE_LTO=ON -DVS_DISABLE_FATAL_WARNINGS=ON -DUSE_CRASHPAD=ON -DCRASHPAD_URL="$env:SENTRY_DSN_NONPROD" -DVIEWER_CHANNEL_TYPE="Project" -DVIEWER_CHANNEL_CODENAME="$env:VIEWER_CHANNEL_CODENAME"
    - pipenv run autobuild build -c ReleaseOS -A32 --no-configure
    - cd build-vc-32/newview/Release/
    - $env:SENTRY_PROJECT = $env:SENTRY_PROJECT_NONPROD
    - sentry-cli upload-dif alchemy-bin.exe alchemy-bin.pdb crashpad_handler.exe crashpad_handler.pdb openjpeg.pdb openjpeg.dll fmod.dll libcrypto-1_1-x64.dll libcrypto-1_1-x64.pdb libssl-1_1-x64.dll libssl-1_1-x64.pdb vcruntime140.dll msvcp140.dll nghttp2.dll glod.dll
  artifacts:
    name: "$env:CI_COMMIT_REF_NAME-$env:CI_COMMIT_SHORT_SHA"
    expire_in: 4 week
    paths:
      - build-vc-32/newview/Release/build_data.json
      - build-vc-32/newview/Release/alchemy-bin.pdb
      - build-vc-32/newview/Release/Alchemy_*_Setup.exe
  only:
    - /^project-.*$/
    - schedules
  except:
    - beta
    - release
      
build:project:windows64:
  stage: build
  tags:
    - autobuild
    - windows
  before_script:
    - pipenv install
  script:
    - $env:VIEWER_CHANNEL_CODENAME = $env:CI_COMMIT_REF_NAME[8..100] -join ''
    - pipenv run autobuild configure -c ReleaseOS -A64 -- -DUSE_FMODSTUDIO=ON -DUSE_NVAPI=ON -DUSE_LTO=ON -DVS_DISABLE_FATAL_WARNINGS=ON -DUSE_CRASHPAD=ON -DCRASHPAD_URL="$env:SENTRY_DSN_NONPROD" -DVIEWER_CHANNEL_TYPE="Project" -DVIEWER_CHANNEL_CODENAME="$env:VIEWER_CHANNEL_CODENAME"
    - pipenv run autobuild build -c ReleaseOS -A64 --no-configure
    - cd build-vc-64/newview/Release/
    - $env:SENTRY_PROJECT = $env:SENTRY_PROJECT_NONPROD
    - sentry-cli upload-dif alchemy-bin.exe alchemy-bin.pdb crashpad_handler.exe crashpad_handler.pdb openjpeg.pdb openjpeg.dll fmod.dll libcrypto-1_1-x64.dll libcrypto-1_1-x64.pdb libssl-1_1-x64.dll libssl-1_1-x64.pdb vcruntime140.dll msvcp140.dll nghttp2.dll glod.dll
  artifacts:
    name: "$env:CI_COMMIT_REF_NAME-$env:CI_COMMIT_SHORT_SHA"
    expire_in: 4 week
    paths:
      - build-vc-64/newview/Release/build_data.json
      - build-vc-64/newview/Release/alchemy-bin.pdb
      - build-vc-64/newview/Release/Alchemy_*_Setup.exe
  only:
    - /^project-.*$/
    - schedules
  except:
    - beta
    - release

build:beta:windows32:
  stage: build
  tags:
    - autobuild
    - windows
  before_script:
    - pipenv install
  script:
    - pipenv run autobuild configure -c ReleaseOS -A32 -- -DUSE_FMODSTUDIO=ON -DUSE_NVAPI=ON -DUSE_LTO=ON -DVS_DISABLE_FATAL_WARNINGS=ON -DUSE_CRASHPAD=ON -DCRASHPAD_URL="$env:SENTRY_DSN_PROD" -DVIEWER_CHANNEL_TYPE="Beta"
    - pipenv run autobuild build -c ReleaseOS -A32 --no-configure
    - cd build-vc-32/newview/Release/
    - $env:SENTRY_PROJECT = $env:SENTRY_PROJECT_PROD
    - sentry-cli upload-dif alchemy-bin.exe alchemy-bin.pdb crashpad_handler.exe crashpad_handler.pdb openjpeg.pdb openjpeg.dll fmod.dll libcrypto-1_1-x64.dll libcrypto-1_1-x64.pdb libssl-1_1-x64.dll libssl-1_1-x64.pdb vcruntime140.dll msvcp140.dll nghttp2.dll glod.dll
  artifacts:
    name: "$env:CI_COMMIT_REF_NAME-$env:CI_COMMIT_SHORT_SHA"
    expire_in: 4 week
    paths:
      - build-vc-32/newview/Release/build_data.json
      - build-vc-32/newview/Release/alchemy-bin.pdb
      - build-vc-32/newview/Release/Alchemy_*_Setup.exe
  only:
    - beta
    - schedules
  except:
    - /^project-.*$/
    - release
      
build:beta:windows64:
  stage: build
  tags:
    - autobuild
    - windows
  before_script:
    - pipenv install
  script:
    - pipenv run autobuild configure -c ReleaseOS -A64 -- -DUSE_FMODSTUDIO=ON -DUSE_NVAPI=ON -DUSE_LTO=ON -DVS_DISABLE_FATAL_WARNINGS=ON -DUSE_CRASHPAD=ON -DCRASHPAD_URL="$env:SENTRY_DSN_PROD" -DVIEWER_CHANNEL_TYPE="Beta"
    - pipenv run autobuild build -c ReleaseOS -A64 --no-configure
    - cd build-vc-64/newview/Release/
    - $env:SENTRY_PROJECT = $env:SENTRY_PROJECT_PROD
    - sentry-cli upload-dif alchemy-bin.exe alchemy-bin.pdb crashpad_handler.exe crashpad_handler.pdb openjpeg.pdb openjpeg.dll fmod.dll libcrypto-1_1-x64.dll libcrypto-1_1-x64.pdb libssl-1_1-x64.dll libssl-1_1-x64.pdb vcruntime140.dll msvcp140.dll nghttp2.dll glod.dll
  artifacts:
    name: "$env:CI_COMMIT_REF_NAME-$env:CI_COMMIT_SHORT_SHA"
    expire_in: 4 week
    paths:
      - build-vc-64/newview/Release/build_data.json
      - build-vc-64/newview/Release/alchemy-bin.pdb
      - build-vc-64/newview/Release/Alchemy_*_Setup.exe
  only:
    - beta
    - schedules
  except:
    - /^project-.*$/
    - release

build:release:windows32:
  stage: build
  tags:
    - autobuild
    - windows
  before_script:
    - pipenv install
  script:
    - pipenv run autobuild configure -c ReleaseOS -A32 -- -DUSE_FMODSTUDIO=ON -DUSE_NVAPI=ON -DUSE_LTO=ON -DVS_DISABLE_FATAL_WARNINGS=ON -DUSE_CRASHPAD=ON -DCRASHPAD_URL="$env:SENTRY_DSN_PROD" -DVIEWER_CHANNEL_TYPE="Beta"
    - pipenv run autobuild build -c ReleaseOS -A32 --no-configure
    - cd build-vc-32/newview/Release/
    - $env:SENTRY_PROJECT = $env:SENTRY_PROJECT_PROD
    - sentry-cli upload-dif alchemy-bin.exe alchemy-bin.pdb crashpad_handler.exe crashpad_handler.pdb openjpeg.pdb openjpeg.dll fmod.dll libcrypto-1_1-x64.dll libcrypto-1_1-x64.pdb libssl-1_1-x64.dll libssl-1_1-x64.pdb vcruntime140.dll msvcp140.dll nghttp2.dll glod.dll
  artifacts:
    name: "$env:CI_COMMIT_REF_NAME-$env:CI_COMMIT_SHORT_SHA"
    expire_in: 4 week
    paths:
      - build-vc-32/newview/Release/build_data.json
      - build-vc-32/newview/Release/alchemy-bin.pdb
      - build-vc-32/newview/Release/Alchemy_*_Setup.exe
  only:
    - release
    - schedules
  except:
    - /^project-.*$/
    - beta

build:release:windows64:
  stage: build
  tags:
    - autobuild
    - windows
  before_script:
    - pipenv install
  script:
    - pipenv run autobuild configure -c ReleaseOS -A64 -- -DUSE_FMODSTUDIO=ON -DUSE_NVAPI=ON -DUSE_LTO=ON -DVS_DISABLE_FATAL_WARNINGS=ON -DUSE_CRASHPAD=ON -DCRASHPAD_URL="$env:SENTRY_DSN_PROD" -DVIEWER_CHANNEL_TYPE="Beta"
    - pipenv run autobuild build -c ReleaseOS -A64 --no-configure
    - cd build-vc-64/newview/Release/
    - $env:SENTRY_PROJECT = $:env:SENTRY_PROJECT_PROD
    - sentry-cli upload-dif alchemy-bin.exe alchemy-bin.pdb crashpad_handler.exe crashpad_handler.pdb openjpeg.pdb openjpeg.dll fmod.dll libcrypto-1_1-x64.dll libcrypto-1_1-x64.pdb libssl-1_1-x64.dll libssl-1_1-x64.pdb vcruntime140.dll msvcp140.dll nghttp2.dll glod.dll
  artifacts:
    name: "$env:CI_COMMIT_REF_NAME-$env:CI_COMMIT_SHORT_SHA"
    expire_in: 4 week
    paths:
      - build-vc-64/newview/Release/build_data.json
      - build-vc-64/newview/Release/alchemy-bin.pdb
      - build-vc-64/newview/Release/Alchemy_*_Setup.exe
  only:
    - release
    - schedules
  except:
    - /^project-.*$/
    - beta

deploy:nexus:
  stage: deploy
  tags:
    - autobuild
    - windows
  script:
    - $BuildData = Get-Content .\build-vc-64\newview\Release\build_data.json | ConvertFrom-Json
    - $UploadDestViewerDir = $BuildData."Channel".ToLower().Replace(" ", "/")
    - $UploadDestVer = $BuildData."Version"
    - $UploadDestURL = "https://pkg.alchemyviewer.org/repository/viewer/${$UploadDestViewerDir}/${$UploadDestVer}"

    - $UploadParams = @{
      UseBasicParsing = $true
      Method          = "PUT"
      Headers         = @{
        ContentType   = "application/x-executable"
        Authorization = "Basic $([System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes("$env:AUTOBUILD_HTTP_USER`:$env:AUTOBUILD_HTTP_PASS")))" 
        }
      Verbose         = $true
      }

    - Push-Location .\build-vc-32\newview\Release\
    - $FileNameWin32 = Get-ChildItem -Path . -Name -Include Alchemy_*_Setup.exe
    - Invoke-WebRequest @$UploadParams -InFile .\$FileNameWin32 --Uri "${$UploadDestURL}/${FileNameWin32}"
    - Pop-Location

    - Push-Location .\build-vc-64\newview\Release\
    - $FileNameWin64 = Get-ChildItem -Path . -Name -Include Alchemy_*_Setup.exe
    - Invoke-WebRequest @$UploadParams -InFile .\$FileNameWin32 --Uri "${$UploadDestURL}/${FileNameWin64}"
    - Pop-Location
  when: manual
  only:
    - /^project-.*$/
    - beta
    - release
  except:
    - master